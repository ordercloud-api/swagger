# {{projectName}}

{{moduleName}} - JavaScript SDK for {{projectName}}

OrderCloud.io is a cloud-hosted B2B eCommerce platform exposed entirely via a RESTful API. When combined with 
our extensive library of components, SDKs, and deployment tools, it enables rapid development of custom, secure, 
and scalable B2B eCommerce solutions. Spin up a fully functional B2B app in minutes, and customize it to limits 
of your imagination.

This SDK is automatically generated by the [Swagger Codegen](https://github.com/swagger-api/swagger-codegen) project:

- API version: {{appVersion}}
- Package version: {{projectVersion}}
{{^hideGenerationTimestamp}}
- Build date: {{generatedDate}}
{{/hideGenerationTimestamp}}
- Build package: {{generatorClass}}

{{#infoUrl}}
For more information, please visit [https://documentation.ordercloud.io](https://documentation.ordercloud.io/platform-guides/getting-started/introduction-to-ordercloud)
{{/infoUrl}}

## Installation

#### npm

```shell
npm install ordercloud-javascript-sdk --save
```


### For browser

The library also works in the browser environment via npm and [browserify](http://browserify.org/). After following
the above steps with Node.js and installing browserify with `npm install -g browserify`,
perform the following (assuming *index.js* is your entry file):

```shell
browserify index.js > bundle.js
```

Then include *bundle.js* in the HTML pages.

## Authentication 

We'll need to get a token before we can make any API calls. The platform offers four different
[auth workflows](https://documentation.ordercloud.io/platform-guides/authentication/oauth2-workflows) 
all found under the [Auth class](https://github.com/ordercloud-api/OrderCloud-JavaScript-SDK/blob/staging/src/api/Auth.js).

We'll use the password-grant type for this example.

```javascript
var OrderCloud = require('ordercloud-javascript-sdk')
var defaultClient = OrderCloud.ApiClient.instance;

var username = 'YOUR_USERNAME'; //username of the user logging in
var password = 'YOUR_PASSWORD'; //password of the user logging in
var clientID = 'xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'; //clientID of the application the user is logging in to ([sign up for free](https://account.ordercloud.io/login/)
var scope = ['FullAccess']; //string array of roles the application has access to ([more info](https://documentation.ordercloud.io/platform-guides/authentication/security-profiles)) 

return OrderCloud.Auth.Login(username, password, clientID, scope)
  .then(function(response){
    //store token, now any subsequent calls will automatically set this token in the headers for you
    var token = response['access_token'];
    defaultClient.authentications['oauth2'].accessToken = token;
  })
  .catch(function(err){
    //there was an error
    console.log(err);
  });

```

## Example

After following the [authentication](#Authentication) instructions we can make any API
call very easily.

Let's get the currently authenticated user's details with a Me.Get()

```javascript
return OrderCloudSDK.Me.Get()
  .then(function(user){
    console.log("This user's name is " + user.FirstName + " " + user.LastName);
  })
  .catch(function(err){
    //there was an error
    console.log(err);
  })
```

## Further Reading

You should now have enough information to get started building on our platform! The platform guides[https://documentation.ordercloud.io/platform-guides] and [API reference](https://documentation.ordercloud.io/api-reference)
should be your go-to guide for working with the API.


## Documentation for API Endpoints

All URIs are relative to *{{basePath}}*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}*{{moduleName}}.{{classname}}* | [**{{operationId}}**]({{apiDocPath}}{{classname}}.md#{{operationId}}) | **{{httpMethod}}** {{path}} | {{#summary}}{{summary}}{{/summary}}
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}

## Documentation for Models

{{#models}}{{#model}} - [{{moduleName}}.{{classname}}]({{modelDocPath}}{{classname}}.md)
{{/model}}{{/models}}

## Documentation for Authorization

{{^authMethods}} All endpoints do not require authorization.
{{/authMethods}}{{#authMethods}}{{#last}} Authentication schemes defined for the API:{{/last}}{{/authMethods}}
{{#authMethods}}### {{name}}

{{#isApiKey}}- **Type**: API key
- **API key parameter name**: {{keyParamName}}
- **Location**: {{#isKeyInQuery}}URL query string{{/isKeyInQuery}}{{#isKeyInHeader}}HTTP header{{/isKeyInHeader}}
{{/isApiKey}}
{{#isBasic}}- **Type**: HTTP basic authentication
{{/isBasic}}
{{#isOAuth}}- **Type**: OAuth
- **Flow**: {{flow}}
- **Authorization URL**: {{authorizationUrl}}
- **Scopes**: {{^scopes}}N/A{{/scopes}}
{{#scopes}}  - {{scope}}: {{description}}
{{/scopes}}
{{/isOAuth}}

{{/authMethods}}
